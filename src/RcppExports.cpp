// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// dists_queen_d
Rcpp::NumericVector dists_queen_d(Rcpp::NumericVector& lat1, Rcpp::NumericVector& lon1, Rcpp::NumericVector& lat2, Rcpp::NumericVector& lon2, double yres, double xres, unsigned int nrow, double ymin, bool haversine, unsigned short int ncores, double radius2);
RcppExport SEXP _spaths_dists_queen_d(SEXP lat1SEXP, SEXP lon1SEXP, SEXP lat2SEXP, SEXP lon2SEXP, SEXP yresSEXP, SEXP xresSEXP, SEXP nrowSEXP, SEXP yminSEXP, SEXP haversineSEXP, SEXP ncoresSEXP, SEXP radius2SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::NumericVector& >::type lat1(lat1SEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector& >::type lon1(lon1SEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector& >::type lat2(lat2SEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector& >::type lon2(lon2SEXP);
    Rcpp::traits::input_parameter< double >::type yres(yresSEXP);
    Rcpp::traits::input_parameter< double >::type xres(xresSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type nrow(nrowSEXP);
    Rcpp::traits::input_parameter< double >::type ymin(yminSEXP);
    Rcpp::traits::input_parameter< bool >::type haversine(haversineSEXP);
    Rcpp::traits::input_parameter< unsigned short int >::type ncores(ncoresSEXP);
    Rcpp::traits::input_parameter< double >::type radius2(radius2SEXP);
    rcpp_result_gen = Rcpp::wrap(dists_queen_d(lat1, lon1, lat2, lon2, yres, xres, nrow, ymin, haversine, ncores, radius2));
    return rcpp_result_gen;
END_RCPP
}
// dists_rook_d
Rcpp::NumericVector dists_rook_d(Rcpp::NumericVector& lat1, Rcpp::NumericVector& lon1, Rcpp::NumericVector& lat2, Rcpp::NumericVector& lon2, double yres, double xres, unsigned int nrow, double ymin, bool haversine, unsigned short int ncores, double radius2);
RcppExport SEXP _spaths_dists_rook_d(SEXP lat1SEXP, SEXP lon1SEXP, SEXP lat2SEXP, SEXP lon2SEXP, SEXP yresSEXP, SEXP xresSEXP, SEXP nrowSEXP, SEXP yminSEXP, SEXP haversineSEXP, SEXP ncoresSEXP, SEXP radius2SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::NumericVector& >::type lat1(lat1SEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector& >::type lon1(lon1SEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector& >::type lat2(lat2SEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector& >::type lon2(lon2SEXP);
    Rcpp::traits::input_parameter< double >::type yres(yresSEXP);
    Rcpp::traits::input_parameter< double >::type xres(xresSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type nrow(nrowSEXP);
    Rcpp::traits::input_parameter< double >::type ymin(yminSEXP);
    Rcpp::traits::input_parameter< bool >::type haversine(haversineSEXP);
    Rcpp::traits::input_parameter< unsigned short int >::type ncores(ncoresSEXP);
    Rcpp::traits::input_parameter< double >::type radius2(radius2SEXP);
    rcpp_result_gen = Rcpp::wrap(dists_rook_d(lat1, lon1, lat2, lon2, yres, xres, nrow, ymin, haversine, ncores, radius2));
    return rcpp_result_gen;
END_RCPP
}
// dists_queen_i
Rcpp::IntegerVector dists_queen_i(Rcpp::NumericVector& lat1, Rcpp::NumericVector& lon1, Rcpp::NumericVector& lat2, Rcpp::NumericVector& lon2, double yres, double xres, unsigned int nrow, double ymin, bool haversine, unsigned short int ncores, double radius2);
RcppExport SEXP _spaths_dists_queen_i(SEXP lat1SEXP, SEXP lon1SEXP, SEXP lat2SEXP, SEXP lon2SEXP, SEXP yresSEXP, SEXP xresSEXP, SEXP nrowSEXP, SEXP yminSEXP, SEXP haversineSEXP, SEXP ncoresSEXP, SEXP radius2SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::NumericVector& >::type lat1(lat1SEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector& >::type lon1(lon1SEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector& >::type lat2(lat2SEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector& >::type lon2(lon2SEXP);
    Rcpp::traits::input_parameter< double >::type yres(yresSEXP);
    Rcpp::traits::input_parameter< double >::type xres(xresSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type nrow(nrowSEXP);
    Rcpp::traits::input_parameter< double >::type ymin(yminSEXP);
    Rcpp::traits::input_parameter< bool >::type haversine(haversineSEXP);
    Rcpp::traits::input_parameter< unsigned short int >::type ncores(ncoresSEXP);
    Rcpp::traits::input_parameter< double >::type radius2(radius2SEXP);
    rcpp_result_gen = Rcpp::wrap(dists_queen_i(lat1, lon1, lat2, lon2, yres, xres, nrow, ymin, haversine, ncores, radius2));
    return rcpp_result_gen;
END_RCPP
}
// dists_rook_i
Rcpp::IntegerVector dists_rook_i(Rcpp::NumericVector& lat1, Rcpp::NumericVector& lon1, Rcpp::NumericVector& lat2, Rcpp::NumericVector& lon2, double yres, double xres, unsigned int nrow, double ymin, bool haversine, unsigned short int ncores, double radius2);
RcppExport SEXP _spaths_dists_rook_i(SEXP lat1SEXP, SEXP lon1SEXP, SEXP lat2SEXP, SEXP lon2SEXP, SEXP yresSEXP, SEXP xresSEXP, SEXP nrowSEXP, SEXP yminSEXP, SEXP haversineSEXP, SEXP ncoresSEXP, SEXP radius2SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::NumericVector& >::type lat1(lat1SEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector& >::type lon1(lon1SEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector& >::type lat2(lat2SEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector& >::type lon2(lon2SEXP);
    Rcpp::traits::input_parameter< double >::type yres(yresSEXP);
    Rcpp::traits::input_parameter< double >::type xres(xresSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type nrow(nrowSEXP);
    Rcpp::traits::input_parameter< double >::type ymin(yminSEXP);
    Rcpp::traits::input_parameter< bool >::type haversine(haversineSEXP);
    Rcpp::traits::input_parameter< unsigned short int >::type ncores(ncoresSEXP);
    Rcpp::traits::input_parameter< double >::type radius2(radius2SEXP);
    rcpp_result_gen = Rcpp::wrap(dists_rook_i(lat1, lon1, lat2, lon2, yres, xres, nrow, ymin, haversine, ncores, radius2));
    return rcpp_result_gen;
END_RCPP
}
// openmp_installed
bool openmp_installed();
RcppExport SEXP _spaths_openmp_installed() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(openmp_installed());
    return rcpp_result_gen;
END_RCPP
}
// define_ranges
Rcpp::IntegerVector define_ranges(Rcpp::IntegerVector& n_rows, int avg_rows, int ncores);
RcppExport SEXP _spaths_define_ranges(SEXP n_rowsSEXP, SEXP avg_rowsSEXP, SEXP ncoresSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::IntegerVector& >::type n_rows(n_rowsSEXP);
    Rcpp::traits::input_parameter< int >::type avg_rows(avg_rowsSEXP);
    Rcpp::traits::input_parameter< int >::type ncores(ncoresSEXP);
    rcpp_result_gen = Rcpp::wrap(define_ranges(n_rows, avg_rows, ncores));
    return rcpp_result_gen;
END_RCPP
}
// list_origins
Rcpp::IntegerVector list_origins(int n_origins);
RcppExport SEXP _spaths_list_origins(SEXP n_originsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type n_origins(n_originsSEXP);
    rcpp_result_gen = Rcpp::wrap(list_origins(n_origins));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_spaths_dists_queen_d", (DL_FUNC) &_spaths_dists_queen_d, 11},
    {"_spaths_dists_rook_d", (DL_FUNC) &_spaths_dists_rook_d, 11},
    {"_spaths_dists_queen_i", (DL_FUNC) &_spaths_dists_queen_i, 11},
    {"_spaths_dists_rook_i", (DL_FUNC) &_spaths_dists_rook_i, 11},
    {"_spaths_openmp_installed", (DL_FUNC) &_spaths_openmp_installed, 0},
    {"_spaths_define_ranges", (DL_FUNC) &_spaths_define_ranges, 3},
    {"_spaths_list_origins", (DL_FUNC) &_spaths_list_origins, 1},
    {NULL, NULL, 0}
};

RcppExport void R_init_spaths(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
